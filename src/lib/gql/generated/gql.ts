/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 * Learn more about it here: https://the-guild.dev/graphql/codegen/plugins/presets/preset-client#reducing-bundle-size
 */
const documents = {
    "\n  query datasetsByType($locale: String!, $type: String!) {\n    allFirstSpiritDataset(filter: {_locale: {eq: $locale}, entityType: {eq: $type}}) {\n      nodes {\n        id\n        entityType\n        route\n        data {\n          __typename\n          ...FirstSpiritSmartLivingNewsFragment\n          ...FirstSpiritSmartLivingLocationFragment\n        }\n      }\n    }\n  }\n": types.DatasetsByTypeDocument,
    "\n  fragment FirstSpiritTeaserFragment on FirstSpiritTeaser {\n    stHeadline\n    stText\n    stImage {\n      __typename\n      ... on FirstSpiritImage {\n        resolutions {\n          original {\n            url\n          }\n        }\n      }\n    }\n    stImageAltText\n    stLayout {\n      key\n      value\n    }\n  }\n\n  fragment FirstSpiritStageFragment on FirstSpiritStage {\n    stHeadline\n    stSubHeadlineTextImageStage: stSubheadline\n    stImage {\n      __typename\n      ... on FirstSpiritImage {\n        resolutions {\n          original {\n            url\n          }\n        }\n      }\n    }\n    stCta {\n      data {\n        __typename\n        ... on FirstSpiritInternalLink {\n          ltText\n          ltLink {\n            __typename\n            ... on FirstSpiritPageRef {\n              page {\n                route\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritTextImageFragment on FirstSpiritTextImage {\n    stHeadline\n    stSubHeadlineTextImage: stSubheadline\n    stText\n    stColumns {\n      key\n    }\n    stLayout {\n      key\n    }\n    stImage {\n      __typename\n      ... on FirstSpiritImage {\n        resolutions {\n          original {\n            url\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritProductCategoryTeaserFragment on FirstSpiritProductCategoryTeaser {\n    stHeadline\n    stText\n    stTextAlignment {\n      key\n    }\n    stCategoryLink {\n      data {\n        __typename\n        ... on FirstSpiritInternalLink {\n          ltText\n          ltLink {\n            __typename\n            ... on FirstSpiritPageRef {\n              page {\n                route\n              }\n            }\n          }\n        }\n      }\n    }\n    stCategory {\n      key\n      value\n      items {\n        fsId\n        previewId\n        template\n        data {\n          __typename... on FirstSpiritSmartlivingCategory {\n            ttName\n            items {\n              route\n              fsId\n              data {\n                __typename... on FirstSpiritSmartlivingProduct {\n                  ttName\n                  ttPrice\n                  ttDescription\n                  ttImage {\n                    __typename... on FirstSpiritImage {\n                      resolutions {\n                        original {\n                          url\n                        }\n                      }\n                    }\n                  }\n                  ttImageAltText\n                  ttCategories {\n                    data {\n                      __typename... on FirstSpiritSmartlivingCategory {\n                        ttName\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritStepsFragment on FirstSpiritSteps {\n    stHeadline\n    stSubline\n    stText\n    stSteps {\n      __typename\n      ... on FirstSpiritSection {\n        data {\n          __typename\n          ... on FirstSpiritStepsItem {\n            __typename\n            stTitle\n            stText\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritAccordionFragment on FirstSpiritAccordion {\n    stHeadline\n    stSubline\n    stInfo\n    stAccordion {\n      __typename\n      ... on FirstSpiritSection {\n        data {\n          __typename\n          ... on FirstSpiritAccordionItem {\n            stTitle\n            stContent\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritFeaturesFragment on FirstSpiritFeatures {\n    stHeadline\n    stText\n    stFeatures {\n      __typename\n      ... on FirstSpiritSection {\n        data {\n          __typename\n          ... on FirstSpiritFeature {\n            stTitle\n            stText\n            stImageAltText\n            stType {\n              key\n            }\n            stLink {\n              data {\n                __typename\n                ... on FirstSpiritInternalLink {\n                  ltText\n                  ltLink {\n                    __typename\n                    ... on FirstSpiritPageRef {\n                      page {\n                        route\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            stImage {\n              __typename\n              ... on FirstSpiritImage {\n                resolutions {\n                  original {\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritGoogleMapsFragment on FirstSpiritGoogleMaps {\n    stHeadline\n    stSubheadline\n    stInitialZoom\n    stInitialLat\n    stInitialLong\n  }\n\n  fragment FirstSpiritNewsOverviewFragment on FirstSpiritNewsOverview {\n    stHeadline\n    stDataPage {\n      __typename\n      ... on FirstSpiritPageRef {\n      type\n      referenceId\n      referenceType\n      page {\n        fsId\n      }\n      }\n    }\n  }\n": types.FirstSpiritTeaserFragmentFragmentDoc,
    "\n  fragment FirstSpiritSmartLivingNewsFragment on FirstSpiritSmartlivingNews {\n    ttHeadline\n    ttSubheadline\n    ttDate\n    ttAuthor\n    ttTags\n    ttImage {\n      __typename\n      ... on FirstSpiritImage {\n        resolutions {\n          original {\n            url\n          }\n        }\n      }\n    }\n    ttImageAltText\n    ttTeaserText\n    ttArticleText\n  }\n\n  fragment FirstSpiritSmartLivingLocationFragment on FirstSpiritSmartlivingLocation {\n    ttName\n    ttDescription\n    ttLat\n    ttLong\n  }\n\n  fragment FirstSpiritTableFragment on FirstSpiritTable {\n    stHeadline\n    stText\n    stTable\n  }\n": types.FirstSpiritSmartLivingNewsFragmentFragmentDoc,
    "\n  query gcaPageByName($locale: String!, $name: String!) {\n    firstSpiritGcaPage(_locale: {eq: $locale}, name: {eq: $name}) {\n      data {\n        __typename\n        ... on FirstSpiritGcaFooter {\n          gcCopyright\n          gcLinks {\n            data {\n              __typename\n              ... on FirstSpiritInternalLink {\n                __typename\n                ltText\n                ltLink {\n                  ... on FirstSpiritPageRef {\n                    __typename\n                    page {\n                      route\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n": types.GcaPageByNameDocument,
    "\n  query fsNavigationQuery($locale: String!) {\n    firstSpiritNavigationData(_locale: {eq: $locale}) {\n      structure {\n        navigationItem {\n          label\n          seoRoute\n          fsNavItemId\n          page {\n            id\n          }\n        }\n        structureChildren {\n          navigationItem {\n            label\n            seoRoute\n            fsNavItemId\n            page {\n              id\n            }\n          }\n          structureChildren {\n            navigationItem {\n              fsNavItemId\n              label\n              seoRoute\n              page {\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n": types.FsNavigationQueryDocument,
    "\n  query pageByRoute($locale: String!, $route: String!) {\n    firstSpiritPage(_locale: {eq: $locale}, route: {eq: $route}) {\n      layout\n      name\n      id\n      previewId\n      data {\n        __typename\n        ... on FirstSpiritStandard {\n          ptHeadline\n          ptSubheadline\n          ptMdImageAltText\n          ptImage {\n            __typename\n            ... on FirstSpiritImage {\n              resolutions {\n                original {\n                  url\n                }\n              }\n            }\n          }\n        }\n      }\n      pageBodies {\n        name\n        previewId\n        children {\n          ... on FirstSpiritSection {\n            __typename\n            id\n            data {\n              __typename\n              ...FirstSpiritTeaserFragment\n              ...FirstSpiritStageFragment\n              ...FirstSpiritTextImageFragment\n              ...FirstSpiritProductCategoryTeaserFragment\n              ...FirstSpiritStepsFragment\n              ...FirstSpiritAccordionFragment\n              ...FirstSpiritFeaturesFragment\n              ...FirstSpiritGoogleMapsFragment\n              ...FirstSpiritTableFragment\n              ...FirstSpiritNewsOverviewFragment\n            }\n          }\n        }\n      }\n    }\n  }\n": types.PageByRouteDocument,
    "\n  query products($locale: String!) {\n    allFirstSpiritDataset(\n      filter: {_locale: {eq: $locale}, entityType: {eq: \"product\"}}\n    ) {\n      nodes {\n        fsId\n        entityType\n        route\n        data {\n          __typename\n          ... on FirstSpiritSmartlivingProduct {\n            ttName\n            ttPrice\n            ttTeaserText\n            ttImage{\n              __typename... on FirstSpiritImage{\n                resolutions{\n                  original{\n                    url\n                  }\n                }\n              }\n            }\n            ttImageAltText\n            ttCategories {\n            data{\n              __typename... on FirstSpiritSmartlivingCategory{\n                ttName\n                }\n              }\n            }\n            ttDescription\n            ttImageAltText\n            ttImage {\n              __typename\n              ... on FirstSpiritImage {\n                resolutions {\n                  original {\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n": types.ProductsDocument,
    "\n  query productDetail($locale: String!, $id: String!) {\n    firstSpiritDataset(_locale: {eq: $locale}, fsId: {eq: $id}) {\n      data {\n        __typename\n        ... on FirstSpiritSmartlivingProduct {\n          ttName\n          ttPrice\n          ttTeaserText\n          ttImage{\n            __typename... on FirstSpiritImage{\n              resolutions{\n                original{\n                  url\n                }\n              }\n            }\n          }\n          ttImageAltText\n          ttCategories {\n            data{\n              __typename... on FirstSpiritSmartlivingCategory{\n                ttName\n                }\n              }\n            }\n          ttDescription\n          ttImageAltText\n          ttImage {\n            __typename\n            ... on FirstSpiritImage {\n              resolutions {\n                original {\n                  url\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }  \n": types.ProductDetailDocument,
    "\n  query sectionById($locale: String!, $id: String!) {\n    allFirstSpiritSection(filter: {_locale: {eq: $locale}, fsId: {eq: $id}}) {\n      nodes {\n        data {\n          __typename\n          ...FirstSpiritTeaserFragment\n          ...FirstSpiritStageFragment\n          ...FirstSpiritTextImageFragment\n          ...FirstSpiritProductCategoryTeaserFragment\n          ...FirstSpiritStepsFragment\n          ...FirstSpiritAccordionFragment\n          ...FirstSpiritFeaturesFragment\n          ...FirstSpiritGoogleMapsFragment\n          ...FirstSpiritTableFragment\n        }\n        name\n        fsId\n      }\n    }\n  }\n": types.SectionByIdDocument,
    "\n  query sectionByType($locale: String!, $type: String!) {\n    allFirstSpiritSection(\n      filter: {_locale: {eq: $locale}, sectionType: {eq: $type}}\n    ) {\n      nodes {\n        data {\n          __typename\n          ...FirstSpiritTeaserFragment\n          ...FirstSpiritStageFragment\n          ...FirstSpiritTextImageFragment\n          ...FirstSpiritProductCategoryTeaserFragment\n          ...FirstSpiritStepsFragment\n          ...FirstSpiritAccordionFragment\n          ...FirstSpiritFeaturesFragment\n          ...FirstSpiritGoogleMapsFragment\n          ...FirstSpiritTableFragment\n        }\n        name\n        fsId\n      }\n    }\n  }\n": types.SectionByTypeDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query datasetsByType($locale: String!, $type: String!) {\n    allFirstSpiritDataset(filter: {_locale: {eq: $locale}, entityType: {eq: $type}}) {\n      nodes {\n        id\n        entityType\n        route\n        data {\n          __typename\n          ...FirstSpiritSmartLivingNewsFragment\n          ...FirstSpiritSmartLivingLocationFragment\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query datasetsByType($locale: String!, $type: String!) {\n    allFirstSpiritDataset(filter: {_locale: {eq: $locale}, entityType: {eq: $type}}) {\n      nodes {\n        id\n        entityType\n        route\n        data {\n          __typename\n          ...FirstSpiritSmartLivingNewsFragment\n          ...FirstSpiritSmartLivingLocationFragment\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment FirstSpiritTeaserFragment on FirstSpiritTeaser {\n    stHeadline\n    stText\n    stImage {\n      __typename\n      ... on FirstSpiritImage {\n        resolutions {\n          original {\n            url\n          }\n        }\n      }\n    }\n    stImageAltText\n    stLayout {\n      key\n      value\n    }\n  }\n\n  fragment FirstSpiritStageFragment on FirstSpiritStage {\n    stHeadline\n    stSubHeadlineTextImageStage: stSubheadline\n    stImage {\n      __typename\n      ... on FirstSpiritImage {\n        resolutions {\n          original {\n            url\n          }\n        }\n      }\n    }\n    stCta {\n      data {\n        __typename\n        ... on FirstSpiritInternalLink {\n          ltText\n          ltLink {\n            __typename\n            ... on FirstSpiritPageRef {\n              page {\n                route\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritTextImageFragment on FirstSpiritTextImage {\n    stHeadline\n    stSubHeadlineTextImage: stSubheadline\n    stText\n    stColumns {\n      key\n    }\n    stLayout {\n      key\n    }\n    stImage {\n      __typename\n      ... on FirstSpiritImage {\n        resolutions {\n          original {\n            url\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritProductCategoryTeaserFragment on FirstSpiritProductCategoryTeaser {\n    stHeadline\n    stText\n    stTextAlignment {\n      key\n    }\n    stCategoryLink {\n      data {\n        __typename\n        ... on FirstSpiritInternalLink {\n          ltText\n          ltLink {\n            __typename\n            ... on FirstSpiritPageRef {\n              page {\n                route\n              }\n            }\n          }\n        }\n      }\n    }\n    stCategory {\n      key\n      value\n      items {\n        fsId\n        previewId\n        template\n        data {\n          __typename... on FirstSpiritSmartlivingCategory {\n            ttName\n            items {\n              route\n              fsId\n              data {\n                __typename... on FirstSpiritSmartlivingProduct {\n                  ttName\n                  ttPrice\n                  ttDescription\n                  ttImage {\n                    __typename... on FirstSpiritImage {\n                      resolutions {\n                        original {\n                          url\n                        }\n                      }\n                    }\n                  }\n                  ttImageAltText\n                  ttCategories {\n                    data {\n                      __typename... on FirstSpiritSmartlivingCategory {\n                        ttName\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritStepsFragment on FirstSpiritSteps {\n    stHeadline\n    stSubline\n    stText\n    stSteps {\n      __typename\n      ... on FirstSpiritSection {\n        data {\n          __typename\n          ... on FirstSpiritStepsItem {\n            __typename\n            stTitle\n            stText\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritAccordionFragment on FirstSpiritAccordion {\n    stHeadline\n    stSubline\n    stInfo\n    stAccordion {\n      __typename\n      ... on FirstSpiritSection {\n        data {\n          __typename\n          ... on FirstSpiritAccordionItem {\n            stTitle\n            stContent\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritFeaturesFragment on FirstSpiritFeatures {\n    stHeadline\n    stText\n    stFeatures {\n      __typename\n      ... on FirstSpiritSection {\n        data {\n          __typename\n          ... on FirstSpiritFeature {\n            stTitle\n            stText\n            stImageAltText\n            stType {\n              key\n            }\n            stLink {\n              data {\n                __typename\n                ... on FirstSpiritInternalLink {\n                  ltText\n                  ltLink {\n                    __typename\n                    ... on FirstSpiritPageRef {\n                      page {\n                        route\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            stImage {\n              __typename\n              ... on FirstSpiritImage {\n                resolutions {\n                  original {\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritGoogleMapsFragment on FirstSpiritGoogleMaps {\n    stHeadline\n    stSubheadline\n    stInitialZoom\n    stInitialLat\n    stInitialLong\n  }\n\n  fragment FirstSpiritNewsOverviewFragment on FirstSpiritNewsOverview {\n    stHeadline\n    stDataPage {\n      __typename\n      ... on FirstSpiritPageRef {\n      type\n      referenceId\n      referenceType\n      page {\n        fsId\n      }\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment FirstSpiritTeaserFragment on FirstSpiritTeaser {\n    stHeadline\n    stText\n    stImage {\n      __typename\n      ... on FirstSpiritImage {\n        resolutions {\n          original {\n            url\n          }\n        }\n      }\n    }\n    stImageAltText\n    stLayout {\n      key\n      value\n    }\n  }\n\n  fragment FirstSpiritStageFragment on FirstSpiritStage {\n    stHeadline\n    stSubHeadlineTextImageStage: stSubheadline\n    stImage {\n      __typename\n      ... on FirstSpiritImage {\n        resolutions {\n          original {\n            url\n          }\n        }\n      }\n    }\n    stCta {\n      data {\n        __typename\n        ... on FirstSpiritInternalLink {\n          ltText\n          ltLink {\n            __typename\n            ... on FirstSpiritPageRef {\n              page {\n                route\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritTextImageFragment on FirstSpiritTextImage {\n    stHeadline\n    stSubHeadlineTextImage: stSubheadline\n    stText\n    stColumns {\n      key\n    }\n    stLayout {\n      key\n    }\n    stImage {\n      __typename\n      ... on FirstSpiritImage {\n        resolutions {\n          original {\n            url\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritProductCategoryTeaserFragment on FirstSpiritProductCategoryTeaser {\n    stHeadline\n    stText\n    stTextAlignment {\n      key\n    }\n    stCategoryLink {\n      data {\n        __typename\n        ... on FirstSpiritInternalLink {\n          ltText\n          ltLink {\n            __typename\n            ... on FirstSpiritPageRef {\n              page {\n                route\n              }\n            }\n          }\n        }\n      }\n    }\n    stCategory {\n      key\n      value\n      items {\n        fsId\n        previewId\n        template\n        data {\n          __typename... on FirstSpiritSmartlivingCategory {\n            ttName\n            items {\n              route\n              fsId\n              data {\n                __typename... on FirstSpiritSmartlivingProduct {\n                  ttName\n                  ttPrice\n                  ttDescription\n                  ttImage {\n                    __typename... on FirstSpiritImage {\n                      resolutions {\n                        original {\n                          url\n                        }\n                      }\n                    }\n                  }\n                  ttImageAltText\n                  ttCategories {\n                    data {\n                      __typename... on FirstSpiritSmartlivingCategory {\n                        ttName\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritStepsFragment on FirstSpiritSteps {\n    stHeadline\n    stSubline\n    stText\n    stSteps {\n      __typename\n      ... on FirstSpiritSection {\n        data {\n          __typename\n          ... on FirstSpiritStepsItem {\n            __typename\n            stTitle\n            stText\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritAccordionFragment on FirstSpiritAccordion {\n    stHeadline\n    stSubline\n    stInfo\n    stAccordion {\n      __typename\n      ... on FirstSpiritSection {\n        data {\n          __typename\n          ... on FirstSpiritAccordionItem {\n            stTitle\n            stContent\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritFeaturesFragment on FirstSpiritFeatures {\n    stHeadline\n    stText\n    stFeatures {\n      __typename\n      ... on FirstSpiritSection {\n        data {\n          __typename\n          ... on FirstSpiritFeature {\n            stTitle\n            stText\n            stImageAltText\n            stType {\n              key\n            }\n            stLink {\n              data {\n                __typename\n                ... on FirstSpiritInternalLink {\n                  ltText\n                  ltLink {\n                    __typename\n                    ... on FirstSpiritPageRef {\n                      page {\n                        route\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            stImage {\n              __typename\n              ... on FirstSpiritImage {\n                resolutions {\n                  original {\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  fragment FirstSpiritGoogleMapsFragment on FirstSpiritGoogleMaps {\n    stHeadline\n    stSubheadline\n    stInitialZoom\n    stInitialLat\n    stInitialLong\n  }\n\n  fragment FirstSpiritNewsOverviewFragment on FirstSpiritNewsOverview {\n    stHeadline\n    stDataPage {\n      __typename\n      ... on FirstSpiritPageRef {\n      type\n      referenceId\n      referenceType\n      page {\n        fsId\n      }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment FirstSpiritSmartLivingNewsFragment on FirstSpiritSmartlivingNews {\n    ttHeadline\n    ttSubheadline\n    ttDate\n    ttAuthor\n    ttTags\n    ttImage {\n      __typename\n      ... on FirstSpiritImage {\n        resolutions {\n          original {\n            url\n          }\n        }\n      }\n    }\n    ttImageAltText\n    ttTeaserText\n    ttArticleText\n  }\n\n  fragment FirstSpiritSmartLivingLocationFragment on FirstSpiritSmartlivingLocation {\n    ttName\n    ttDescription\n    ttLat\n    ttLong\n  }\n\n  fragment FirstSpiritTableFragment on FirstSpiritTable {\n    stHeadline\n    stText\n    stTable\n  }\n"): (typeof documents)["\n  fragment FirstSpiritSmartLivingNewsFragment on FirstSpiritSmartlivingNews {\n    ttHeadline\n    ttSubheadline\n    ttDate\n    ttAuthor\n    ttTags\n    ttImage {\n      __typename\n      ... on FirstSpiritImage {\n        resolutions {\n          original {\n            url\n          }\n        }\n      }\n    }\n    ttImageAltText\n    ttTeaserText\n    ttArticleText\n  }\n\n  fragment FirstSpiritSmartLivingLocationFragment on FirstSpiritSmartlivingLocation {\n    ttName\n    ttDescription\n    ttLat\n    ttLong\n  }\n\n  fragment FirstSpiritTableFragment on FirstSpiritTable {\n    stHeadline\n    stText\n    stTable\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query gcaPageByName($locale: String!, $name: String!) {\n    firstSpiritGcaPage(_locale: {eq: $locale}, name: {eq: $name}) {\n      data {\n        __typename\n        ... on FirstSpiritGcaFooter {\n          gcCopyright\n          gcLinks {\n            data {\n              __typename\n              ... on FirstSpiritInternalLink {\n                __typename\n                ltText\n                ltLink {\n                  ... on FirstSpiritPageRef {\n                    __typename\n                    page {\n                      route\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query gcaPageByName($locale: String!, $name: String!) {\n    firstSpiritGcaPage(_locale: {eq: $locale}, name: {eq: $name}) {\n      data {\n        __typename\n        ... on FirstSpiritGcaFooter {\n          gcCopyright\n          gcLinks {\n            data {\n              __typename\n              ... on FirstSpiritInternalLink {\n                __typename\n                ltText\n                ltLink {\n                  ... on FirstSpiritPageRef {\n                    __typename\n                    page {\n                      route\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query fsNavigationQuery($locale: String!) {\n    firstSpiritNavigationData(_locale: {eq: $locale}) {\n      structure {\n        navigationItem {\n          label\n          seoRoute\n          fsNavItemId\n          page {\n            id\n          }\n        }\n        structureChildren {\n          navigationItem {\n            label\n            seoRoute\n            fsNavItemId\n            page {\n              id\n            }\n          }\n          structureChildren {\n            navigationItem {\n              fsNavItemId\n              label\n              seoRoute\n              page {\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query fsNavigationQuery($locale: String!) {\n    firstSpiritNavigationData(_locale: {eq: $locale}) {\n      structure {\n        navigationItem {\n          label\n          seoRoute\n          fsNavItemId\n          page {\n            id\n          }\n        }\n        structureChildren {\n          navigationItem {\n            label\n            seoRoute\n            fsNavItemId\n            page {\n              id\n            }\n          }\n          structureChildren {\n            navigationItem {\n              fsNavItemId\n              label\n              seoRoute\n              page {\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query pageByRoute($locale: String!, $route: String!) {\n    firstSpiritPage(_locale: {eq: $locale}, route: {eq: $route}) {\n      layout\n      name\n      id\n      previewId\n      data {\n        __typename\n        ... on FirstSpiritStandard {\n          ptHeadline\n          ptSubheadline\n          ptMdImageAltText\n          ptImage {\n            __typename\n            ... on FirstSpiritImage {\n              resolutions {\n                original {\n                  url\n                }\n              }\n            }\n          }\n        }\n      }\n      pageBodies {\n        name\n        previewId\n        children {\n          ... on FirstSpiritSection {\n            __typename\n            id\n            data {\n              __typename\n              ...FirstSpiritTeaserFragment\n              ...FirstSpiritStageFragment\n              ...FirstSpiritTextImageFragment\n              ...FirstSpiritProductCategoryTeaserFragment\n              ...FirstSpiritStepsFragment\n              ...FirstSpiritAccordionFragment\n              ...FirstSpiritFeaturesFragment\n              ...FirstSpiritGoogleMapsFragment\n              ...FirstSpiritTableFragment\n              ...FirstSpiritNewsOverviewFragment\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query pageByRoute($locale: String!, $route: String!) {\n    firstSpiritPage(_locale: {eq: $locale}, route: {eq: $route}) {\n      layout\n      name\n      id\n      previewId\n      data {\n        __typename\n        ... on FirstSpiritStandard {\n          ptHeadline\n          ptSubheadline\n          ptMdImageAltText\n          ptImage {\n            __typename\n            ... on FirstSpiritImage {\n              resolutions {\n                original {\n                  url\n                }\n              }\n            }\n          }\n        }\n      }\n      pageBodies {\n        name\n        previewId\n        children {\n          ... on FirstSpiritSection {\n            __typename\n            id\n            data {\n              __typename\n              ...FirstSpiritTeaserFragment\n              ...FirstSpiritStageFragment\n              ...FirstSpiritTextImageFragment\n              ...FirstSpiritProductCategoryTeaserFragment\n              ...FirstSpiritStepsFragment\n              ...FirstSpiritAccordionFragment\n              ...FirstSpiritFeaturesFragment\n              ...FirstSpiritGoogleMapsFragment\n              ...FirstSpiritTableFragment\n              ...FirstSpiritNewsOverviewFragment\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query products($locale: String!) {\n    allFirstSpiritDataset(\n      filter: {_locale: {eq: $locale}, entityType: {eq: \"product\"}}\n    ) {\n      nodes {\n        fsId\n        entityType\n        route\n        data {\n          __typename\n          ... on FirstSpiritSmartlivingProduct {\n            ttName\n            ttPrice\n            ttTeaserText\n            ttImage{\n              __typename... on FirstSpiritImage{\n                resolutions{\n                  original{\n                    url\n                  }\n                }\n              }\n            }\n            ttImageAltText\n            ttCategories {\n            data{\n              __typename... on FirstSpiritSmartlivingCategory{\n                ttName\n                }\n              }\n            }\n            ttDescription\n            ttImageAltText\n            ttImage {\n              __typename\n              ... on FirstSpiritImage {\n                resolutions {\n                  original {\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query products($locale: String!) {\n    allFirstSpiritDataset(\n      filter: {_locale: {eq: $locale}, entityType: {eq: \"product\"}}\n    ) {\n      nodes {\n        fsId\n        entityType\n        route\n        data {\n          __typename\n          ... on FirstSpiritSmartlivingProduct {\n            ttName\n            ttPrice\n            ttTeaserText\n            ttImage{\n              __typename... on FirstSpiritImage{\n                resolutions{\n                  original{\n                    url\n                  }\n                }\n              }\n            }\n            ttImageAltText\n            ttCategories {\n            data{\n              __typename... on FirstSpiritSmartlivingCategory{\n                ttName\n                }\n              }\n            }\n            ttDescription\n            ttImageAltText\n            ttImage {\n              __typename\n              ... on FirstSpiritImage {\n                resolutions {\n                  original {\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query productDetail($locale: String!, $id: String!) {\n    firstSpiritDataset(_locale: {eq: $locale}, fsId: {eq: $id}) {\n      data {\n        __typename\n        ... on FirstSpiritSmartlivingProduct {\n          ttName\n          ttPrice\n          ttTeaserText\n          ttImage{\n            __typename... on FirstSpiritImage{\n              resolutions{\n                original{\n                  url\n                }\n              }\n            }\n          }\n          ttImageAltText\n          ttCategories {\n            data{\n              __typename... on FirstSpiritSmartlivingCategory{\n                ttName\n                }\n              }\n            }\n          ttDescription\n          ttImageAltText\n          ttImage {\n            __typename\n            ... on FirstSpiritImage {\n              resolutions {\n                original {\n                  url\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }  \n"): (typeof documents)["\n  query productDetail($locale: String!, $id: String!) {\n    firstSpiritDataset(_locale: {eq: $locale}, fsId: {eq: $id}) {\n      data {\n        __typename\n        ... on FirstSpiritSmartlivingProduct {\n          ttName\n          ttPrice\n          ttTeaserText\n          ttImage{\n            __typename... on FirstSpiritImage{\n              resolutions{\n                original{\n                  url\n                }\n              }\n            }\n          }\n          ttImageAltText\n          ttCategories {\n            data{\n              __typename... on FirstSpiritSmartlivingCategory{\n                ttName\n                }\n              }\n            }\n          ttDescription\n          ttImageAltText\n          ttImage {\n            __typename\n            ... on FirstSpiritImage {\n              resolutions {\n                original {\n                  url\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }  \n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query sectionById($locale: String!, $id: String!) {\n    allFirstSpiritSection(filter: {_locale: {eq: $locale}, fsId: {eq: $id}}) {\n      nodes {\n        data {\n          __typename\n          ...FirstSpiritTeaserFragment\n          ...FirstSpiritStageFragment\n          ...FirstSpiritTextImageFragment\n          ...FirstSpiritProductCategoryTeaserFragment\n          ...FirstSpiritStepsFragment\n          ...FirstSpiritAccordionFragment\n          ...FirstSpiritFeaturesFragment\n          ...FirstSpiritGoogleMapsFragment\n          ...FirstSpiritTableFragment\n        }\n        name\n        fsId\n      }\n    }\n  }\n"): (typeof documents)["\n  query sectionById($locale: String!, $id: String!) {\n    allFirstSpiritSection(filter: {_locale: {eq: $locale}, fsId: {eq: $id}}) {\n      nodes {\n        data {\n          __typename\n          ...FirstSpiritTeaserFragment\n          ...FirstSpiritStageFragment\n          ...FirstSpiritTextImageFragment\n          ...FirstSpiritProductCategoryTeaserFragment\n          ...FirstSpiritStepsFragment\n          ...FirstSpiritAccordionFragment\n          ...FirstSpiritFeaturesFragment\n          ...FirstSpiritGoogleMapsFragment\n          ...FirstSpiritTableFragment\n        }\n        name\n        fsId\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query sectionByType($locale: String!, $type: String!) {\n    allFirstSpiritSection(\n      filter: {_locale: {eq: $locale}, sectionType: {eq: $type}}\n    ) {\n      nodes {\n        data {\n          __typename\n          ...FirstSpiritTeaserFragment\n          ...FirstSpiritStageFragment\n          ...FirstSpiritTextImageFragment\n          ...FirstSpiritProductCategoryTeaserFragment\n          ...FirstSpiritStepsFragment\n          ...FirstSpiritAccordionFragment\n          ...FirstSpiritFeaturesFragment\n          ...FirstSpiritGoogleMapsFragment\n          ...FirstSpiritTableFragment\n        }\n        name\n        fsId\n      }\n    }\n  }\n"): (typeof documents)["\n  query sectionByType($locale: String!, $type: String!) {\n    allFirstSpiritSection(\n      filter: {_locale: {eq: $locale}, sectionType: {eq: $type}}\n    ) {\n      nodes {\n        data {\n          __typename\n          ...FirstSpiritTeaserFragment\n          ...FirstSpiritStageFragment\n          ...FirstSpiritTextImageFragment\n          ...FirstSpiritProductCategoryTeaserFragment\n          ...FirstSpiritStepsFragment\n          ...FirstSpiritAccordionFragment\n          ...FirstSpiritFeaturesFragment\n          ...FirstSpiritGoogleMapsFragment\n          ...FirstSpiritTableFragment\n        }\n        name\n        fsId\n      }\n    }\n  }\n"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;